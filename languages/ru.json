{
	"homepageTitle": "Генерация коротких уникальных идентификаторов",
	"whatIsSqidsBasic": "{name}{pronounced} - это библиотека с открытым исходным кодом, которая позволяет генерировать короткие уникальные идентификаторы из чисел. Эти идентификаторы безопасны для URL, могут кодировать несколько чисел и не содержат обычные слова из списка непристойной лексики.",
	"readMore": "Подробнее",
	"thisIsWhatTheyLookLike": "Вот как они выглядят:",
	"useCases": "Варианты использования",
	"theMainUse": "Основное применение {name} - это чисто визуальное. Если вы хотите использовать идентификаторы вместо чисел в своем проекте, {name} может быть хорошим выбором.",
	"goodFor": "Подходит для",
	"notGoodFor": "Не подходит для",
	"encodingPrimaryKeys": "Кодирование первичных ключей",
	"ifUsingRelationalDatabase": "Если вы используете реляционную базу данных",
	"savingDatabaseLookups": "Экономия запросов к базе данных",
	"byEncodingMultipleObjects": "Путем кодирования нескольких объектов",
	"temporaryLoginTokens": "Временные токены входа",
	"profanityFreeUrlSafe": "Без непристойной лексики и безопасные для URL",
	"sensitiveData": "Чувствительные данные",
	"thisIsNotEncryptionLibrary": "Это не библиотека шифрования",
	"userIds": "Идентификаторы пользователей",
	"canRevealUserCount": "Могут раскрывать количество пользователей, если кто-то узнает алфавит кодирования",
	"faq": "ЧаВо",
	"playground": "Площадка",
	"language": "Язык",
	"features": "Особенности",
	"generateShortIds": "Генерация коротких идентификаторов из неотрицательных чисел",
	"easyEncodingDecoding": "Простое кодирование и декодирование",
	"idsDoNotContainProfanity": "Автоматически сгенерированные идентификаторы не содержат общей непристойной лексики",
	"supportForCustomIdsShuffledAlphabet": "Поддержка пользовательских идентификаторов через перемешанный алфавит",
	"everyVersionSameId": "Каждая версия производит одинаковые идентификаторы",
	"smallLibraryPermissiveLicense": "Небольшая библиотека с разрешительной лицензией",
	"totalLanguagesNewDesign": "{count} языков программирования ({new} с использованием нового дизайна)",
	"getStarted": "Начать",
	"whatLanguageAreYouUsing": "Какой язык вы используете?",
	"cantFindIt": "Не можете найти?",
	"letUsKnowAboutIt": "Сообщите нам об этом?",
	"example": "Пример",
	"alphabet": "Алфавит",
	"numbers": "Числа",
	"generatedId": "Сгенерированный идентификатор",
	"shuffle": "перемешивание",
	"shuffleCap": "Перемешать",
	"addNew": "новый",
	"issuesWithTranslationHelpTranslate": "Предложите правку перевода текста",
	"sponsor": "Спонсор",
	"popular": "Популярные",
	"askAQuestion": "Задать вопрос",
	"foundABug": "Нашли баг?",
	"hashidsUpgradedAndRebranded": "{name} был обновлен и переименован",
	"starRepoOnGithub": "Поставьте звезду {what} на {github}",
	"quickEncodeDecodeExample": "Быстрый пример кодирования и декодирования:",
	"ifIdsAreTooShortYouCanPadThem": "Если идентификаторы слишком короткие, вы можете дополнить их до определенной длины:",
	"createUniqueIdsByShuffling": "Создание уникальных идентификаторов путем перемешивания алфавита:",
	"fullDocIsAt": "Полная документация находится на",
	"getStartedCap": "Начать",
	"ifYoureLookingForOriginalHashids": "Если вы ищете оригинальный {name}, вы можете найти его здесь:",
	"sqidsForLangIsNotReady": "{name} для {lang} еще не готов.",
	"pleaseStarRepoToMoveItUp": "Пожалуйста, поставьте звезду репозиторию, чтобы поднять его в нашем списке задач:",
	"ifYoudLikeToHelpPort": "Если вы хотите помочь оживить эту версию, есть раздел FAQ о том, как это сделать:",
	"howToPortToAnotherLang": "Как перенести {name} на другой язык?",
	"ifYoureLookingForTheOriginal": "Если вы ищете оригинальный проект {name}, вы можете найти его здесь:",
	"itWillNotBeCompatible": "Обратите внимание, что он не будет совместим с текущим алгоритмом, как только эта версия будет завершена.",
	"homepageMetaDescription": "{name} - это библиотека с открытым исходным кодом, которая позволяет генерировать короткие уникальные идентификаторы из чисел. Поддерживает {count} языков программирования.",
	"shortUniqueIdsIn": "Короткие уникальные идентификаторы на {lang}",
	"repoMetaDescription": "Генерация коротких уникальных идентификаторов на {lang} с использованием {name}. Эти идентификаторы безопасны для URL, могут кодировать несколько чисел и не содержат общей непристойной лексики.",
	"playgroundMetaDescription": "Площадка {name}. Изучение кодирования и декодирования библиотеки {name}.",
	"faqForSqids": "Часто задаваемые вопросы для {name}.",
	"minLength": "Минимальная длина",
	"blocklist": "Список блокировки",
	"addYourOwnCustomBlocklist": "Добавьте свои собственные слова для блокировки, разделяя их пробелами…",
	"useTheDefaultBlocklistAsWell": "Использовать также стандартный список блокировки",
	"defaultAlphabet": "Стандартный",
	"short": "Короткий",
	"long": "Длинный",
	"letters": "Буквы",
	"lowercase": "Строчные буквы",
	"uppercase": "Прописные буквы",
	"list": "Список",
	"encode": "Кодировать",
	"decode": "Декодировать",
	"encodeMultiple": "Кодировать несколько",
	"encodeExtraZero": "Кодировать дополнительный ноль",
	"encodeLargeConstant": "Кодировать большую константу",
	"id": "Идентификатор",
	"encodeTheseNumbers": "Кодирование этих чисел:",
	"willProduce": "Будет сгенерировано:",
	"decodingThisId": "Декодирование этого идентификатора:",
	"alphabetMustBeAtLeast": "Алфавит должен содержать как минимум {count} символов",
	"alphabetSpacesWillBeIgnored": "Пробелы в алфавите будут проигнорированы",
	"blocklistWordsLessThanWillBeIgnored": "Слова из списка блокировки короче {count} символов будут проигнорированы",
	"block": "блок",
	"general": "Общее",
	"whatIsItGoodFor": "Для чего это полезно?",
	"whatIsItNotGoodFor": "Что ему не подходит?",
	"canEncodeSeveralNumbersAtOnce": "Могу ли я кодировать сразу несколько чисел?",
	"areGeneratedIdsUnique": "Являются ли сгенерированные идентификаторы уникальными?",
	"whatLimitationsDoesSqidsHave": "Какие ограничения у {name}?",
	"contribute": "Внести вклад",
	"gotchas": "Подводные камни",
	"padding": "Дополнение",
	"howCanIMakeMyIdsUnique": "Как сделать мои идентификаторы уникальными?",
	"howCanIShuffleTheDefaultAlphabet": "Как перемешать стандартный алфавит?",
	"shorterOrLongerAlphabet": "Что лучше использовать - короткий или длинный алфавит?",
	"canAlphabetConsistOfNumbers": "Может ли алфавит состоять только из чисел?",
	"canUseEmojisAsAlphabet": "Могу ли я использовать эмодзи в качестве алфавита?",
	"whyPadIds": "Почему дополнять идентификаторы?",
	"canIMakeGeneratedIdsLonger": "Могу ли я увеличить длину сгенерированных идентификаторов?",
	"canIMakeGeneratedIdsSpecificLength": "Могу ли я сделать длину сгенерированных идентификаторов определенной?",
	"whyUseABlocklist": "Зачем использовать список блокировки?",
	"howDoesTheBlocklistWork": "Как работает список блокировки?",
	"whatWordsAreInBlocklist": "Какие слова находятся в списке блокировки?",
	"whatHappensWhenAllIdsBlocked": "Что произойдет, если все идентификаторы будут заблокированы?",
	"howToCheckIfIdsAreValid": "Как проверить, являются ли идентификаторы допустимыми?",
	"whatHappensWhenDefaultBlocklistUpdates": "Что происходит при обновлении стандартного списка блокировки?",
	"canEncodingDifferentNumbersProduceIdenticalIds": "Может ли кодирование разных чисел дать идентичные идентификаторы?",
	"whatIs": "Что такое {name}?",
	"whyWasHashidsUpgradedToSqids": "Почему {hashids} был обновлен до {name}?",
	"whyWasSaltRemoved": "Почему был удален параметр {salt}?",
	"IsHashidsCompatibleWithSqids": "Совместим ли {hashids} с {name}?",
	"howCanISafelyUpgrade": "Как безопасно обновиться с {hashids} до {name}?",
	"whereCanIFindOriginalLibraries": "Где я могу найти оригинальные библиотеки {hashids}?",
	"howCanIContribute": "Как я могу внести свой вклад?",
	"howToPortSqids": "Как перенести {name} на другой язык?",
	"sqidsIsASmallOpenSourceLibrary": "{name} - это небольшая библиотека с открытым исходным кодом, которая может создавать короткие, уникальные и случайные идентификаторы из чисел.",
	"theBestWayToThinkAboutIt": "Лучший способ понять это - это как конвертер из десятичной в шестнадцатеричную систему с несколькими дополнительными функциями.",
	"forLinkShorteningAndMore": "Для сокращения ссылок, генерации уникальных идентификаторов событий для журналирования, генерации идентификаторов для продуктов/объектов на веб-сайте (как делает YouTube для видеороликов), генерации коротких идентификаторов для текстовых сообщений, кодов подтверждения в электронных письмах и т. д.",
	"anyDataThatIsNotSensitive": "Любые данные, которые не являются конфиденциальными. Сгенерированные идентификаторы не являются хэшами и могут быть раскодированы обратно в числа. Например, они могут не подходить для идентификаторов пользователей, потому что после декодирования они могут раскрыть количество пользователей вашего приложения.",
	"yesSqidsCanEncodeManyNumbers": "Да, {name} может кодировать одно или несколько неотрицательных чисел в один идентификатор. Нет ограничений на количество чисел, которые вы можете закодировать, но есть ограничение на размер числа (в зависимости от языка реализации).",
	"thisIsUsefulForSeveralReasons": "Это полезно по нескольким причинам: вы можете закодировать временную метку UNIX и создать идентификаторы с ограниченным сроком действия, или вы можете закодировать номер базы данных вместе с первичным ключом и сэкономить на дополнительных запросах к базе данных.",
	"yesGeneratedIdsAreUnique": "Да, сгенерированные идентификаторы уникальны для входных данных и алфавита.",
	"keepInMindCase": "Тем не менее, стандартный алфавит содержит как строчные, так и прописные буквы, поэтому идентификаторы регистрозависимы.",
	"cannotEncodeNegativeNumbers": "{name} не может кодировать отрицательные числа.",
	"minAlphabetLengthIs": "Минимальная длина алфавита - {length} символов.",
	"alphabetCannotContainMultibyte": "Алфавит не может содержать многобайтовые символы.",
	"sqidsMinLengthLimits": "{name} не может генерировать идентификаторы до определенной длины, только как минимум определенной длины. Диапазон параметра минимальной длины составляет от {min} до {max}.",
	"sqidsAttemptToRegenerate": "{name} может попытаться восстановить идентификаторы до длины алфавита минус один.",
	"theLibraryAcceptsACustomAlphabet": "Библиотека принимает пользовательский алфавит, из которого можно генерировать идентификаторы. Просто предварительно перемешайте стандартный алфавит, предоставленный.",
	"somebodyCouldReverseEngineer": "Пожалуйста, имейте в виду, что при достаточных усилиях кто-то может провести обратную инженерию вашего перемешанного алфавита, поэтому это ни в коем случае не приемлемый способ скрыть конфиденциальные данные.",
	"defaultAlphabetCanBeFoundHere": "Стандартный алфавит можно найти [здесь]({url}).",
	"youCanUseThisToShuffle": "Вы можете использовать любые онлайн-инструменты для перемешивания строк или наш [плейграунд](/playground).",
	"dependsOnUsecaseAlphabetLength": "Зависит от вашего случая использования. Более короткий алфавит создаст более длинные идентификаторы, а более длинный алфавит создаст более короткие идентификаторы. Вы можете использовать [плейграунд](/playground), чтобы протестировать, как будут выглядеть ваши идентификаторы.",
	"yesCanConsistOfNumbers": "Да. Имейте в виду, что сгенерированные идентификаторы всё равно будут строками, и они могут начинаться с нуля.",
	"noMultibyteCharacters": "Нет. {name} не поддерживает многобайтовые символы для алфавита. Сюда также относятся эмодзи, а также многие другие символы.",
	"canExtendIdsWithJunk": "Библиотека может расширять идентификаторы ненужными символами, чтобы они выглядели длиннее. Это полезно, чтобы было не так очевидно, кодируете ли вы маленькое число, такое как {min}, или большое число, такое как {max}.",
	"decodingIsNotAffected": "Декодирование не затрагивается.",
	"yesCanAcceptMinLengthParam": "Да, библиотека принимает параметр минимальной длины, который гарантирует, что идентификаторы будут как минимум такой длины.",
	"noGuaranteeOnIdLength": "Имейте в виду, что нет гарантии на длину ваших идентификаторов - только то, что они не будут короче указанной вами длины.",
	"upToAPoint": "До определенного предела.",
	"settingMaxLengthIsImpossible": "Установка максимальной длины невозможна, потому что рано или поздно ваши идентификаторы превысят допустимую длину при достаточно большом входе данных. Поэтому поддерживается только параметр минимальной длины, и точная или максимальная длина не поддерживается.",
	"blocklistCanPreventWordsFromAppearing": "Список блокировки может предотвратить появление определенных слов в ваших идентификаторах. Это полезно, потому что сгенерированные идентификаторы должны появляться в публичных местах, таких как URL.",
	"sqidsComesWithDefaultBlocklist": "{name} поставляется со [стандартным списком блокировки]({url}), который содержит наиболее распространенные ненормативную лексику и неподобающие слова из нескольких языков. Конечно же, вы можете расширить этот список собственными словами.",
	"blocklistMatchingCaseInsensitive": "Сопоставление слов из списка блокировки не зависит от регистра.",
	"blocklistShortWordsLessThan": "Короткие слова, менее 3 символов, не будут заблокированы. Слова длиной 3 символа должны полностью совпадать с идентификатором. Слова длиной 4 символа или более будут считаться соответствующими, если они являются подстрокой идентификатора.",
	"blocklistWordsContainLeetspeak": "Если слова из списка блокировки содержат цифры (leet-язык), они будут считаться соответствующими, только если они находятся в начале или в конце идентификатора.",
	"defaultBlocklistContainsTheseWords": "Стандартный список блокировки содержит наиболее распространенную ненормативную лексику и неподобающие слова из нескольких языков. Полный список можно найти [здесь]({url}).",
	"whenGeneratedIdMatches": "Когда сгенерированный идентификатор соответствует слову в черном списке, библиотека пытается его восстановить.",
	"ifEveryAttemptFails": "Если каждая попытка восстановить идентификатор не удалась, функция кодирования завершится неудачно и вернет ошибку. Обработка этой ошибки зависит от пользователя.",
	"theBestWayToDecreaseAttempts": "Лучший способ уменьшить количество попыток регенерации — использовать более длинный алфавит, не устанавливать минимальную длину и предоставить меньший черный список. Предоставление пустого черного списка приведет к полному отключению этой функции.",
	"decodingIdsWillProduceOutput": "Декодирование идентификаторов обычно дает какой-то числовой результат, но это не обязательно означает, что идентификатор является каноническим. Чтобы проверить корректность идентификатора, вы можете перекодировать декодированные числа и проверить соответствие идентификатора.",
	"theReasonItIsNotDoneAutomatically": "Причина, по которой это не делается автоматически, заключается в том, что если черный список по умолчанию изменится в будущем, мы не хотим автоматически аннулировать идентификатор, который был сгенерирован в прошлом и теперь может соответствовать новому слову черного списка.",
	"weWillBeSureToUpdateChangelog": "Мы обязательно обновим {changelog}, когда и если изменится черный список по умолчанию.",
	"youHaveToAccountForScenarios": "Вы должны учитывать сценарии, в которых новое слово может быть добавлено в черный список по умолчанию. В этом случае перекодирование чисел может привести к получению другого идентификатора.",
	"theBestWayToEnsureConsistency": "Лучший способ обеспечить согласованность ваших идентификаторов в будущих обновлениях — предоставить собственный черный список, даже если он идентичен текущему черному списку по умолчанию.",
	"noEncodingDifferentNumbers": "Нет, кодирование разных чисел приведет к созданию уникальных идентификаторов.",
	"howeverDecodingRandomIds": "Однако из-за конструкции алгоритма декодирование случайных идентификаторов иногда может давать одни и те же числа. Лучший способ проверить каноничность идентификатора — просто перекодировать декодированные числа и проверить совпадение идентификатора.",
	"hashidsWasFirstVersion": "{hashids} была первой версией этой библиотеки, вышедшей примерно в 2013 году. Она также создавала короткие идентификаторы, но использовала немного другой метод.",
	"hashidsHandledDifferently": "{hashids} обрабатывает некоторые вещи по-другому.",
	"hashidsDidNotSupportCustom": "Он не поддерживал собственный черный список, а вместо этого использовал наиболее распространенные английские ненормативную лексику. Он также использовал параметр {salt} для перетасовки алфавита, что немного сбивало с толку, поскольку библиотека не имеет ничего общего с шифрованием. Кроме того, было использовано слишком много зарезервированных символов, что привело к созданию более длинных идентификаторов.",
	"hashidsDecidedToUpgrade": "Поэтому мы решили обновить и провести ребрендинг. Алгоритм был упрощен, добавлено несколько функций, и все репозитории кода теперь находятся под [одной крышей]({url}).",
	"saltParameterWasUsedToShuffle": "Параметр {salt} использовался для перетасовки алфавита и никогда не предназначался для связи с безопасностью. И {hashids}, и {name} работают аналогично преобразованию десятичных чисел в шестнадцатеричные, но с некоторыми изменениями. Никакого шифрования не существует, поэтому во избежание путаницы этот параметр полностью удален.",
	"noSqidsExpands": "Нет, {name} расширяет функциональность {hashids} и имеет другие цели и требования к дизайну; следовательно, сгенерированные идентификаторы несовместимы с {hashids}.",
	"sinceNoCompatibility": "Поскольку между {hashids} и {name} нет совместимости, невозможно просто заменить {hashids} на {name}.",
	"howeverYouCanMerge": "Однако вы можете объединить их, определив, какой идентификатор принадлежит какой библиотеке.",
	"oneOfTheWaysToMerge": "Один из способов сделать это — использовать длину идентификатора: если вы переключаетесь на {name}, вы можете указать более высокую минимальную длину. Другой способ — вручную добавить собственный символ к вновь сгенерированным идентификаторам.",
	"finallyTryDecoding": "Наконец, вы также можете попытаться декодировать идентификатор с помощью {hashids}, чтобы проверить, действителен ли он. Если нет — декодируйте и перекодируйте с помощью {name}, чтобы проверить, работает ли это.",
	"whereToFindHashids": "Каждая языковая реализация на этом веб-сайте ссылается на исходный репозиторий {hashids}, если он существует.",
	"appreciateStarring": "Если вы хотите поддержать проект, мы будем признательны за пометку наших репозиториев на Github для большей наглядности.",
	"contributeIfDeveloper": "Если вы разработчик и не видите реализации {name} для определенного языка, помогите нам преобразовать библиотеку. То же самое касается языка программирования, которого нет в списке.",
	"contributeIfBug": "Если вы видите ошибку в спецификации или какой-либо реализации, создайте проблему или запрос на включение с предлагаемым исправлением в соответствующем репозитории.",
	"contributeIfMultilang": "Если вы говорите на нескольких языках, нам может пригодиться ваша помощь в [тонкой настройке черного списка]({blocklist}) и [корректировке переводов веб-сайтов]({i18n}), если вы обнаружите какие-либо проблемы.",
	"contributeByGuiding": "Наконец, если у вас есть некоторый опыт работы с {hashids}/{name}, пожалуйста, помогите нашему сообществу, ответив на любые вопросы, которые могут возникнуть у кого-либо.",
	"ifYouWouldLikeToPort": "Если вы хотите перенести {name} на один из следующих языков (или новый, не указанный здесь):",
	"forkTheOfficialRepo": "Создайте форк официального репозитория в своей учетной записи Github и внедрите [спецификацию]({spec}) вместе со всеми тестами. Вы можете повторно использовать любой из существующих файлов README ([пример]({example})).",
	"onceLibIsCreated": "Как только библиотека будет готова, создайте запрос на включение. После объединения мы обновим сайт.",
	"ifNoMaintainers": "Если у репозитория нет активных сопровождающих, мы будем рады предложить вам управлять репозиторием и стать официальным сопровождающим.",
	"ifExpertAtThese": "Если вы являетесь экспертом в следующем, пожалуйста, свяжитесь с нами, если вы хотите портировать библиотеку:",
	"notFound": "Не найдено",
	"otherLanguages": "Другие языки"
}
